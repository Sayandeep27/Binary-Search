class Solution {
public:
    
    static bool compare(vector<int>a,vector<int>b)
    {
        if(a[0]==b[0])
        {
            return a[1]<b[1];
        }
        else
        {
            return a[0]<b[0];
        }
    }
    
    
    vector<int> findRightInterval(vector<vector<int>>& intervals) {
        
        vector<int>ans;
        vector<vector<int>>temp;
        
        int n=intervals.size();
        
        
        for(int i=0;i<n;i++)
        {
            temp.push_back({intervals[i][0],intervals[i][1],i});
        }
        
        sort(temp.begin(),temp.end(),compare);
        
        for(int i=0;i<n;i++)
        {
          int start=0,end=n-1;
          int index=-1;
          
            while(start<=end)
            {
                int mid=start+(end-start)/2;
                
                if(temp[mid][0]>=intervals[i][1])
                {
                    
                    index=temp[mid][2];
                    end=mid-1;
                    
                }
                else
                {
                    start=mid+1;
                }
                
            }
            
            ans.push_back(index);
            
        }
        
        return ans;
        
    }
};
